<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EPiServer.6.1.379.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:EPiServer.Core.Fakes.ShimPageReference">
            <summary>Shim type of EPiServer.Core.PageReference</summary>
        </member>
        <member name="M:EPiServer.Core.Fakes.ShimPageReference.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:EPiServer.Core.Fakes.ShimPageReference.#ctor(EPiServer.Core.PageReference)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:EPiServer.Core.Fakes.ShimPageReference.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:EPiServer.Core.Fakes.ShimPageReference.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:EPiServer.Core.Fakes.ShimPageReference.Bind(EPiServer.Core.IReadOnly)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:EPiServer.Core.Fakes.ShimPageReference.Bind(EPiServer.Core.IReadOnly{EPiServer.Core.PageReference})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:EPiServer.Core.Fakes.ShimPageReference.Bind(System.IComparable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.CompareToIgnoreWorkIDPageReference">
            <summary>Sets the shim of PageReference.CompareToIgnoreWorkID(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.CompareToObject">
            <summary>Sets the shim of PageReference.CompareTo(Object x)</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.Constructor">
            <summary>Sets the shim of PageReference.PageReference()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.ConstructorInt32">
            <summary>Sets the shim of PageReference.PageReference(Int32 pageID)</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.ConstructorInt32Boolean">
            <summary>Sets the shim of PageReference.PageReference(Int32 pageID, Boolean anyVersion)</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.ConstructorInt32Int32">
            <summary>Sets the shim of PageReference.PageReference(Int32 pageID, Int32 workPageID)</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.ConstructorInt32Int32String">
            <summary>Sets the shim of PageReference.PageReference(Int32 pageID, Int32 workPageID, String remoteSite)</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.ConstructorInt32Int32StringBoolean">
            <summary>Sets the shim of PageReference.PageReference(Int32 pageID, Int32 workPageID, String remoteSite, Boolean anyVersion)</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.ConstructorInt32String">
            <summary>Sets the shim of PageReference.PageReference(Int32 pageID, String remoteSite)</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.ConstructorString">
            <summary>Sets the shim of PageReference.PageReference(String complexReference)</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.Copy">
            <summary>Sets the shim of PageReference.Copy()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.CreateReferenceToPublishedPage">
            <summary>Sets the shim of PageReference.CreateReferenceToPublishedPage()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.CreateWritableClone">
            <summary>Sets the shim of PageReference.CreateWritableClone()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.EqualityOpPageReferencePageReference">
            <summary>Sets the shim of PageReference.op_Equality(PageReference x, PageReference y)</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.EqualsObject">
            <summary>Sets the shim of PageReference.Equals(Object o)</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.GetHashCode">
            <summary>Sets the shim of PageReference.GetHashCode()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.IDGet">
            <summary>Sets the shim of PageReference.get_ID()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.IDSetInt32">
            <summary>Sets the shim of PageReference.set_ID(Int32 value)</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.InequalityOpPageReferencePageReference">
            <summary>Sets the shim of PageReference.op_Inequality(PageReference x, PageReference y)</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.IsAnyVersion">
            <summary>Sets the shim of PageReference.IsAnyVersion()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.IsEmpty">
            <summary>Sets the shim of PageReference.IsEmpty()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.IsNullOrEmptyPageReference">
            <summary>Sets the shim of PageReference.IsNullOrEmpty(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.IsReadOnlyGet">
            <summary>Sets the shim of PageReference.get_IsReadOnly()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.IsRemote">
            <summary>Sets the shim of PageReference.IsRemote()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.IsValue">
            <summary>Sets the shim of PageReference.IsValue()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.IsValuePageReference">
            <summary>Sets the shim of PageReference.IsValue(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.MakeReadOnly">
            <summary>Sets the shim of PageReference.MakeReadOnly()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.ParseString">
            <summary>Sets the shim of PageReference.Parse(String s)</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.ParseUrlString">
            <summary>Sets the shim of PageReference.ParseUrl(String url)</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.RemoteSiteGet">
            <summary>Sets the shim of PageReference.get_RemoteSite()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.RemoteSiteSetString">
            <summary>Sets the shim of PageReference.set_RemoteSite(String value)</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.RootPageGet">
            <summary>Sets the shim of PageReference.get_RootPage()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.StartPageGet">
            <summary>Sets the shim of PageReference.get_StartPage()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.StaticConstructor">
            <summary>Sets the shim of PageReference.PageReference()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.ThrowIfReadOnly">
            <summary>Sets the shim of PageReference.ThrowIfReadOnly()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.ToString">
            <summary>Sets the shim of PageReference.ToString()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.TryParseStringPageReferenceOut">
            <summary>Sets the shim of PageReference.TryParse(String complexReference, PageReference&amp; result)</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.WasteBasketGet">
            <summary>Sets the shim of PageReference.get_WasteBasket()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.WorkIDGet">
            <summary>Sets the shim of PageReference.get_WorkID()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.WorkIDSetInt32">
            <summary>Sets the shim of PageReference.set_WorkID(Int32 value)</summary>
        </member>
        <member name="T:EPiServer.Core.Fakes.ShimPageReference.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.AllInstances.CompareToIgnoreWorkIDPageReference">
            <summary>Sets the shim of PageReference.CompareToIgnoreWorkID(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.AllInstances.CompareToObject">
            <summary>Sets the shim of PageReference.CompareTo(Object x)</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.AllInstances.Copy">
            <summary>Sets the shim of PageReference.Copy()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.AllInstances.CreateReferenceToPublishedPage">
            <summary>Sets the shim of PageReference.CreateReferenceToPublishedPage()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.AllInstances.CreateWritableClone">
            <summary>Sets the shim of PageReference.CreateWritableClone()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.AllInstances.EqualsObject">
            <summary>Sets the shim of PageReference.Equals(Object o)</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.AllInstances.GetHashCode01">
            <summary>Sets the shim of PageReference.GetHashCode()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.AllInstances.IDGet">
            <summary>Sets the shim of PageReference.get_ID()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.AllInstances.IDSetInt32">
            <summary>Sets the shim of PageReference.set_ID(Int32 value)</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.AllInstances.IsAnyVersion">
            <summary>Sets the shim of PageReference.IsAnyVersion()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.AllInstances.IsEmpty">
            <summary>Sets the shim of PageReference.IsEmpty()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of PageReference.get_IsReadOnly()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.AllInstances.IsRemote">
            <summary>Sets the shim of PageReference.IsRemote()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.AllInstances.IsValue">
            <summary>Sets the shim of PageReference.IsValue()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.AllInstances.MakeReadOnly">
            <summary>Sets the shim of PageReference.MakeReadOnly()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.AllInstances.RemoteSiteGet">
            <summary>Sets the shim of PageReference.get_RemoteSite()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.AllInstances.RemoteSiteSetString">
            <summary>Sets the shim of PageReference.set_RemoteSite(String value)</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.AllInstances.ThrowIfReadOnly">
            <summary>Sets the shim of PageReference.ThrowIfReadOnly()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.AllInstances.ToString01">
            <summary>Sets the shim of PageReference.ToString()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.AllInstances.WorkIDGet">
            <summary>Sets the shim of PageReference.get_WorkID()</summary>
        </member>
        <member name="P:EPiServer.Core.Fakes.ShimPageReference.AllInstances.WorkIDSetInt32">
            <summary>Sets the shim of PageReference.set_WorkID(Int32 value)</summary>
        </member>
        <member name="T:EPiServer.Fakes.ShimDataFactory">
            <summary>Shim type of EPiServer.DataFactory</summary>
        </member>
        <member name="M:EPiServer.Fakes.ShimDataFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:EPiServer.Fakes.ShimDataFactory.#ctor(EPiServer.DataFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:EPiServer.Fakes.ShimDataFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:EPiServer.Fakes.ShimDataFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:EPiServer.Fakes.ShimDataFactory.Bind(EPiServer.Core.IPageSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.CheckCapabilitiesPageProviderBasePageProviderCapabilities">
            <summary>Sets the shim of DataFactory.CheckCapabilities(PageProviderBase pageProvider, PageProviderCapabilities capabilities)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.CheckSufficientAccessPageProviderBasePageReferenceAccessLevel">
            <summary>Sets the shim of DataFactory.CheckSufficientAccess(PageProviderBase pageProvider, PageReference pageLink, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.Constructor">
            <summary>Sets the shim of DataFactory.DataFactory()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.ConstructorEPiServerCompatibility">
            <summary>Sets the shim of DataFactory.DataFactory(EPiServerCompatibility compatibility)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.ConstructorPageProviderMap">
            <summary>Sets the shim of DataFactory.DataFactory(PageProviderMap providerMap)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.CopyPageReferencePageReference">
            <summary>Sets the shim of DataFactory.Copy(PageReference pageLink, PageReference destinationLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.CopyPageReferencePageReferenceAccessLevelAccessLevelBooleanBoolean">
            <summary>Sets the shim of DataFactory.Copy(PageReference pageLink, PageReference destinationLink, AccessLevel requiredSourceAccess, AccessLevel requiredDestinationAccess, Boolean publishOnDestination, Boolean allowThreading)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.CopyPageReferencePageReferenceBoolean">
            <summary>Sets the shim of DataFactory.Copy(PageReference pageLink, PageReference destinationLink, Boolean allowThreading)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.CopyPageReferencePageReferenceBooleanBoolean">
            <summary>Sets the shim of DataFactory.Copy(PageReference pageLink, PageReference destinationLink, Boolean publishOnDestination, Boolean allowThreading)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.CreateLanguageBranchPageReferenceILanguageSelector">
            <summary>Sets the shim of DataFactory.CreateLanguageBranch(PageReference pageLink, ILanguageSelector selector)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.CreateLanguageBranchPageReferenceILanguageSelectorAccessLevel">
            <summary>Sets the shim of DataFactory.CreateLanguageBranch(PageReference pageLink, ILanguageSelector selector, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.CurrentPageGet">
            <summary>Sets the shim of DataFactory.get_CurrentPage()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.DataFactoryCompatibilityGet">
            <summary>Sets the shim of DataFactory.get_DataFactoryCompatibility()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.DeleteChildrenPageReferenceBoolean">
            <summary>Sets the shim of DataFactory.DeleteChildren(PageReference pageLink, Boolean forceDelete)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.DeleteChildrenPageReferenceBooleanAccessLevel">
            <summary>Sets the shim of DataFactory.DeleteChildren(PageReference pageLink, Boolean forceDelete, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.DeleteLanguageBranchPageReferenceString">
            <summary>Sets the shim of DataFactory.DeleteLanguageBranch(PageReference pageLink, String languageBranch)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.DeleteLanguageBranchPageReferenceStringAccessLevel">
            <summary>Sets the shim of DataFactory.DeleteLanguageBranch(PageReference pageLink, String languageBranch, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.DeletePageReferenceBoolean">
            <summary>Sets the shim of DataFactory.Delete(PageReference pageLink, Boolean forceDelete)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.DeletePageReferenceBooleanAccessLevel">
            <summary>Sets the shim of DataFactory.Delete(PageReference pageLink, Boolean forceDelete, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.DeleteVersionPageReference">
            <summary>Sets the shim of DataFactory.DeleteVersion(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.DeleteVersionPageReferenceAccessLevel">
            <summary>Sets the shim of DataFactory.DeleteVersion(PageReference pageLink, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.EnsureUniqueUrlSegmentsPageReferencePageProviderBase">
            <summary>Sets the shim of DataFactory.EnsureUniqueUrlSegments(PageReference pageLink, PageProviderBase provider)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.FindAllPagesWithCriteriaPageReferencePropertyCriteriaCollectionStringILanguageSelector">
            <summary>Sets the shim of DataFactory.FindAllPagesWithCriteria(PageReference pageLink, PropertyCriteriaCollection criterias, String languageBranch, ILanguageSelector selector)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.FindPagesWithCriteriaPageReferencePropertyCriteriaCollection">
            <summary>Sets the shim of DataFactory.FindPagesWithCriteria(PageReference pageLink, PropertyCriteriaCollection criterias)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.FindPagesWithCriteriaPageReferencePropertyCriteriaCollectionAccessLevel">
            <summary>Sets the shim of DataFactory.FindPagesWithCriteria(PageReference pageLink, PropertyCriteriaCollection criterias, AccessLevel requiredAccess)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.FindPagesWithCriteriaPageReferencePropertyCriteriaCollectionString">
            <summary>Sets the shim of DataFactory.FindPagesWithCriteria(PageReference pageLink, PropertyCriteriaCollection criterias, String languageBranch)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.FindPagesWithCriteriaPageReferencePropertyCriteriaCollectionStringILanguageSelector">
            <summary>Sets the shim of DataFactory.FindPagesWithCriteria(PageReference pageLink, PropertyCriteriaCollection criterias, String languageBranch, ILanguageSelector selector)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.FindPagesWithCriteriaPageReferencePropertyCriteriaCollectionStringILanguageSelectorAccessLevel">
            <summary>Sets the shim of DataFactory.FindPagesWithCriteria(PageReference pageLink, PropertyCriteriaCollection criterias, String languageBranch, ILanguageSelector selector, AccessLevel requiredAccess)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetAffectedPagesPageReferenceIListOfPageReference">
            <summary>Sets the shim of DataFactory.GetAffectedPages(PageReference deleteRoot, IList`1&lt;PageReference&gt; descendents)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetChildrenPageReference">
            <summary>Sets the shim of DataFactory.GetChildren(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetChildrenPageReferenceAccessLevel">
            <summary>Sets the shim of DataFactory.GetChildren(PageReference pageLink, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetChildrenPageReferenceILanguageSelector">
            <summary>Sets the shim of DataFactory.GetChildren(PageReference pageLink, ILanguageSelector selector)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetChildrenPageReferenceILanguageSelectorAccessLevel">
            <summary>Sets the shim of DataFactory.GetChildren(PageReference pageLink, ILanguageSelector selector, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetChildrenPageReferenceILanguageSelectorInt32Int32">
            <summary>Sets the shim of DataFactory.GetChildren(PageReference pageLink, ILanguageSelector selector, Int32 startIndex, Int32 maxRows)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetDefaultPageDataPageReferenceInt32">
            <summary>Sets the shim of DataFactory.GetDefaultPageData(PageReference parentPageLink, Int32 pageTypeID)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetDefaultPageDataPageReferenceInt32AccessLevel">
            <summary>Sets the shim of DataFactory.GetDefaultPageData(PageReference parentPageLink, Int32 pageTypeID, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetDefaultPageDataPageReferenceInt32ILanguageSelector">
            <summary>Sets the shim of DataFactory.GetDefaultPageData(PageReference parentPageLink, Int32 pageTypeID, ILanguageSelector selector)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetDefaultPageDataPageReferenceInt32ILanguageSelectorAccessLevel">
            <summary>Sets the shim of DataFactory.GetDefaultPageData(PageReference parentPageLink, Int32 pageTypeID, ILanguageSelector selector, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetDefaultPageDataPageReferenceString">
            <summary>Sets the shim of DataFactory.GetDefaultPageData(PageReference parentPageLink, String pageTypeName)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetDefaultPageDataPageReferenceStringAccessLevel">
            <summary>Sets the shim of DataFactory.GetDefaultPageData(PageReference parentPageLink, String pageTypeName, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetDefaultPageDataPageReferenceStringILanguageSelector">
            <summary>Sets the shim of DataFactory.GetDefaultPageData(PageReference parentPageLink, String pageTypeName, ILanguageSelector selector)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetDefaultPageDataPageReferenceStringILanguageSelectorAccessLevel">
            <summary>Sets the shim of DataFactory.GetDefaultPageData(PageReference parentPageLink, String pageTypeName, ILanguageSelector selector, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetDescendentsPageReference">
            <summary>Sets the shim of DataFactory.GetDescendents(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetLanguageBranchesPageReference">
            <summary>Sets the shim of DataFactory.GetLanguageBranches(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetLanguageBranchesPageReferenceAccessLevel">
            <summary>Sets the shim of DataFactory.GetLanguageBranches(PageReference pageLink, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetLinksToPagesPageReference">
            <summary>Sets the shim of DataFactory.GetLinksToPages(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetPagePageReference">
            <summary>Sets the shim of DataFactory.GetPage(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetPagePageReferenceAccessLevel">
            <summary>Sets the shim of DataFactory.GetPage(PageReference pageLink, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetPagePageReferenceILanguageSelector">
            <summary>Sets the shim of DataFactory.GetPage(PageReference pageLink, ILanguageSelector selector)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetPagePageReferenceILanguageSelectorAccessLevel">
            <summary>Sets the shim of DataFactory.GetPage(PageReference pageLink, ILanguageSelector selector, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetPageProviderPageReference">
            <summary>Sets the shim of DataFactory.GetPageProvider(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetPageProviderString">
            <summary>Sets the shim of DataFactory.GetPageProvider(String remoteSiteName)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetPagesIListOfPageReferenceILanguageSelector">
            <summary>Sets the shim of DataFactory.GetPages(IList`1&lt;PageReference&gt; pageLinks, ILanguageSelector selector)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetParentsPageReference">
            <summary>Sets the shim of DataFactory.GetParents(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetSettingsFromPagePageReference">
            <summary>Sets the shim of DataFactory.GetSettingsFromPage(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetSettingsFromPagePageReferenceBoolean">
            <summary>Sets the shim of DataFactory.GetSettingsFromPage(PageReference pageLink, Boolean fallbackToStartPageId)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.GetWastebasketContentILanguageSelectorInt32Int32">
            <summary>Sets the shim of DataFactory.GetWastebasketContent(ILanguageSelector selector, Int32 startIndex, Int32 maxRows)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.HasSufficientAccessPageProviderBasePageReferenceAccessLevel">
            <summary>Sets the shim of DataFactory.HasSufficientAccess(PageProviderBase pageProvider, PageReference pageLink, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.InitializeEnterpriseSetting">
            <summary>Sets the shim of DataFactory.InitializeEnterpriseSetting()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.InstanceGet">
            <summary>Sets the shim of DataFactory.get_Instance()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.IsCapabilitySupportedPageReferencePageProviderCapabilities">
            <summary>Sets the shim of DataFactory.IsCapabilitySupported(PageReference pageLink, PageProviderCapabilities capability)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.IsWastebasketPageReference">
            <summary>Sets the shim of DataFactory.IsWastebasket(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.ListDelayedPublish">
            <summary>Sets the shim of DataFactory.ListDelayedPublish()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.ListPublishedVersionsPageReference">
            <summary>Sets the shim of DataFactory.ListPublishedVersions(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.ListVersionsPageReference">
            <summary>Sets the shim of DataFactory.ListVersions(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.ListVersionsPageReferenceString">
            <summary>Sets the shim of DataFactory.ListVersions(PageReference pageLink, String languageBranch)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.ListingFetchCacheHitsGet">
            <summary>Sets the shim of DataFactory.get_ListingFetchCacheHits()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.ListingFetchCountGet">
            <summary>Sets the shim of DataFactory.get_ListingFetchCount()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.ListingFetchDatabaseReadsGet">
            <summary>Sets the shim of DataFactory.get_ListingFetchDatabaseReads()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.LoadPublishedVersionPageReference">
            <summary>Sets the shim of DataFactory.LoadPublishedVersion(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.LoadPublishedVersionPageReferenceString">
            <summary>Sets the shim of DataFactory.LoadPublishedVersion(PageReference pageLink, String languageBranch)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.LoadVersionPageReference">
            <summary>Sets the shim of DataFactory.LoadVersion(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.MovePageReferencePageReference">
            <summary>Sets the shim of DataFactory.Move(PageReference pageLink, PageReference destinationLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.MovePageReferencePageReferenceAccessLevelAccessLevel">
            <summary>Sets the shim of DataFactory.Move(PageReference pageLink, PageReference destinationLink, AccessLevel requiredSourceAccess, AccessLevel requiredDestinationAccess)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.MoveToWastebasketPageReference">
            <summary>Sets the shim of DataFactory.MoveToWastebasket(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.PageFetchCacheHitsGet">
            <summary>Sets the shim of DataFactory.get_PageFetchCacheHits()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.PageFetchCountGet">
            <summary>Sets the shim of DataFactory.get_PageFetchCount()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.PageFetchDatabaseReadsGet">
            <summary>Sets the shim of DataFactory.get_PageFetchDatabaseReads()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.PingString">
            <summary>Sets the shim of DataFactory.Ping(String remoteSiteName)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.ProviderMapGet">
            <summary>Sets the shim of DataFactory.get_ProviderMap()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.ProviderMapSetPageProviderMap">
            <summary>Sets the shim of DataFactory.set_ProviderMap(PageProviderMap value)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.ResetCounters">
            <summary>Sets the shim of DataFactory.ResetCounters()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.ResolvePageFolderInt32">
            <summary>Sets the shim of DataFactory.ResolvePageFolder(Int32 pageFolderId)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.SavePageDataSaveAction">
            <summary>Sets the shim of DataFactory.Save(PageData page, SaveAction action)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.SavePageDataSaveActionAccessLevel">
            <summary>Sets the shim of DataFactory.Save(PageData page, SaveAction action, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.StaticConstructor">
            <summary>Sets the shim of DataFactory.DataFactory()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.SupportCompatibilityEPiServerCompatibility">
            <summary>Sets the shim of DataFactory.SupportCompatibility(EPiServerCompatibility operation)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.TransferPagePageProviderBasePageProviderBasePageDataPageReferenceBoolean">
            <summary>Sets the shim of DataFactory.TransferPage(PageProviderBase sourceProvider, PageProviderBase destinationProvider, PageData page, PageReference destinationLink, Boolean preservePageGuid)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory._FindAllPagesWithCriteriab__6PageReferencePropertyCriteriaCollectionStringILanguageSelectorPageProviderBase">
            <summary>Sets the shim of DataFactory.&lt;FindAllPagesWithCriteria&gt;b__6(PageReference p, PropertyCriteriaCollection c, String l, ILanguageSelector s, PageProviderBase pp)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory._FindPagesWithCriteriab__4PageReferencePropertyCriteriaCollectionStringILanguageSelectorPageProviderBase">
            <summary>Sets the shim of DataFactory.&lt;FindPagesWithCriteria&gt;b__4(PageReference p, PropertyCriteriaCollection c, String l, ILanguageSelector s, PageProviderBase pp)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory._ResetCountersb__1ePageProviderBase">
            <summary>Sets the shim of DataFactory.&lt;ResetCounters&gt;b__1e(PageProviderBase provider)</summary>
        </member>
        <member name="T:EPiServer.Fakes.ShimDataFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.CheckCapabilitiesPageProviderBasePageProviderCapabilities">
            <summary>Sets the shim of DataFactory.CheckCapabilities(PageProviderBase pageProvider, PageProviderCapabilities capabilities)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.CheckSufficientAccessPageProviderBasePageReferenceAccessLevel">
            <summary>Sets the shim of DataFactory.CheckSufficientAccess(PageProviderBase pageProvider, PageReference pageLink, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.CopyPageReferencePageReference">
            <summary>Sets the shim of DataFactory.Copy(PageReference pageLink, PageReference destinationLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.CopyPageReferencePageReferenceAccessLevelAccessLevelBooleanBoolean">
            <summary>Sets the shim of DataFactory.Copy(PageReference pageLink, PageReference destinationLink, AccessLevel requiredSourceAccess, AccessLevel requiredDestinationAccess, Boolean publishOnDestination, Boolean allowThreading)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.CopyPageReferencePageReferenceBoolean">
            <summary>Sets the shim of DataFactory.Copy(PageReference pageLink, PageReference destinationLink, Boolean allowThreading)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.CopyPageReferencePageReferenceBooleanBoolean">
            <summary>Sets the shim of DataFactory.Copy(PageReference pageLink, PageReference destinationLink, Boolean publishOnDestination, Boolean allowThreading)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.CreateLanguageBranchPageReferenceILanguageSelector">
            <summary>Sets the shim of DataFactory.CreateLanguageBranch(PageReference pageLink, ILanguageSelector selector)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.CreateLanguageBranchPageReferenceILanguageSelectorAccessLevel">
            <summary>Sets the shim of DataFactory.CreateLanguageBranch(PageReference pageLink, ILanguageSelector selector, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.CurrentPageGet">
            <summary>Sets the shim of DataFactory.get_CurrentPage()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.DataFactoryCompatibilityGet">
            <summary>Sets the shim of DataFactory.get_DataFactoryCompatibility()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.DeleteChildrenPageReferenceBoolean">
            <summary>Sets the shim of DataFactory.DeleteChildren(PageReference pageLink, Boolean forceDelete)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.DeleteChildrenPageReferenceBooleanAccessLevel">
            <summary>Sets the shim of DataFactory.DeleteChildren(PageReference pageLink, Boolean forceDelete, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.DeleteLanguageBranchPageReferenceString">
            <summary>Sets the shim of DataFactory.DeleteLanguageBranch(PageReference pageLink, String languageBranch)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.DeleteLanguageBranchPageReferenceStringAccessLevel">
            <summary>Sets the shim of DataFactory.DeleteLanguageBranch(PageReference pageLink, String languageBranch, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.DeletePageReferenceBoolean">
            <summary>Sets the shim of DataFactory.Delete(PageReference pageLink, Boolean forceDelete)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.DeletePageReferenceBooleanAccessLevel">
            <summary>Sets the shim of DataFactory.Delete(PageReference pageLink, Boolean forceDelete, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.DeleteVersionPageReference">
            <summary>Sets the shim of DataFactory.DeleteVersion(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.DeleteVersionPageReferenceAccessLevel">
            <summary>Sets the shim of DataFactory.DeleteVersion(PageReference pageLink, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.EnsureUniqueUrlSegmentsPageReferencePageProviderBase">
            <summary>Sets the shim of DataFactory.EnsureUniqueUrlSegments(PageReference pageLink, PageProviderBase provider)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.FindAllPagesWithCriteriaPageReferencePropertyCriteriaCollectionStringILanguageSelector">
            <summary>Sets the shim of DataFactory.FindAllPagesWithCriteria(PageReference pageLink, PropertyCriteriaCollection criterias, String languageBranch, ILanguageSelector selector)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.FindPagesWithCriteriaPageReferencePropertyCriteriaCollection">
            <summary>Sets the shim of DataFactory.FindPagesWithCriteria(PageReference pageLink, PropertyCriteriaCollection criterias)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.FindPagesWithCriteriaPageReferencePropertyCriteriaCollectionAccessLevel">
            <summary>Sets the shim of DataFactory.FindPagesWithCriteria(PageReference pageLink, PropertyCriteriaCollection criterias, AccessLevel requiredAccess)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.FindPagesWithCriteriaPageReferencePropertyCriteriaCollectionString">
            <summary>Sets the shim of DataFactory.FindPagesWithCriteria(PageReference pageLink, PropertyCriteriaCollection criterias, String languageBranch)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.FindPagesWithCriteriaPageReferencePropertyCriteriaCollectionStringILanguageSelector">
            <summary>Sets the shim of DataFactory.FindPagesWithCriteria(PageReference pageLink, PropertyCriteriaCollection criterias, String languageBranch, ILanguageSelector selector)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.FindPagesWithCriteriaPageReferencePropertyCriteriaCollectionStringILanguageSelectorAccessLevel">
            <summary>Sets the shim of DataFactory.FindPagesWithCriteria(PageReference pageLink, PropertyCriteriaCollection criterias, String languageBranch, ILanguageSelector selector, AccessLevel requiredAccess)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetAffectedPagesPageReferenceIListOfPageReference">
            <summary>Sets the shim of DataFactory.GetAffectedPages(PageReference deleteRoot, IList`1&lt;PageReference&gt; descendents)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetChildrenPageReference">
            <summary>Sets the shim of DataFactory.GetChildren(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetChildrenPageReferenceAccessLevel">
            <summary>Sets the shim of DataFactory.GetChildren(PageReference pageLink, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetChildrenPageReferenceILanguageSelector">
            <summary>Sets the shim of DataFactory.GetChildren(PageReference pageLink, ILanguageSelector selector)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetChildrenPageReferenceILanguageSelectorAccessLevel">
            <summary>Sets the shim of DataFactory.GetChildren(PageReference pageLink, ILanguageSelector selector, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetChildrenPageReferenceILanguageSelectorInt32Int32">
            <summary>Sets the shim of DataFactory.GetChildren(PageReference pageLink, ILanguageSelector selector, Int32 startIndex, Int32 maxRows)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetDefaultPageDataPageReferenceInt32">
            <summary>Sets the shim of DataFactory.GetDefaultPageData(PageReference parentPageLink, Int32 pageTypeID)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetDefaultPageDataPageReferenceInt32AccessLevel">
            <summary>Sets the shim of DataFactory.GetDefaultPageData(PageReference parentPageLink, Int32 pageTypeID, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetDefaultPageDataPageReferenceInt32ILanguageSelector">
            <summary>Sets the shim of DataFactory.GetDefaultPageData(PageReference parentPageLink, Int32 pageTypeID, ILanguageSelector selector)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetDefaultPageDataPageReferenceInt32ILanguageSelectorAccessLevel">
            <summary>Sets the shim of DataFactory.GetDefaultPageData(PageReference parentPageLink, Int32 pageTypeID, ILanguageSelector selector, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetDefaultPageDataPageReferenceString">
            <summary>Sets the shim of DataFactory.GetDefaultPageData(PageReference parentPageLink, String pageTypeName)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetDefaultPageDataPageReferenceStringAccessLevel">
            <summary>Sets the shim of DataFactory.GetDefaultPageData(PageReference parentPageLink, String pageTypeName, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetDefaultPageDataPageReferenceStringILanguageSelector">
            <summary>Sets the shim of DataFactory.GetDefaultPageData(PageReference parentPageLink, String pageTypeName, ILanguageSelector selector)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetDefaultPageDataPageReferenceStringILanguageSelectorAccessLevel">
            <summary>Sets the shim of DataFactory.GetDefaultPageData(PageReference parentPageLink, String pageTypeName, ILanguageSelector selector, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetDescendentsPageReference">
            <summary>Sets the shim of DataFactory.GetDescendents(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetLanguageBranchesPageReference">
            <summary>Sets the shim of DataFactory.GetLanguageBranches(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetLanguageBranchesPageReferenceAccessLevel">
            <summary>Sets the shim of DataFactory.GetLanguageBranches(PageReference pageLink, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetLinksToPagesPageReference">
            <summary>Sets the shim of DataFactory.GetLinksToPages(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetPagePageReference">
            <summary>Sets the shim of DataFactory.GetPage(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetPagePageReferenceAccessLevel">
            <summary>Sets the shim of DataFactory.GetPage(PageReference pageLink, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetPagePageReferenceILanguageSelector">
            <summary>Sets the shim of DataFactory.GetPage(PageReference pageLink, ILanguageSelector selector)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetPagePageReferenceILanguageSelectorAccessLevel">
            <summary>Sets the shim of DataFactory.GetPage(PageReference pageLink, ILanguageSelector selector, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetPageProviderPageReference">
            <summary>Sets the shim of DataFactory.GetPageProvider(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetPageProviderString">
            <summary>Sets the shim of DataFactory.GetPageProvider(String remoteSiteName)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetPagesIListOfPageReferenceILanguageSelector">
            <summary>Sets the shim of DataFactory.GetPages(IList`1&lt;PageReference&gt; pageLinks, ILanguageSelector selector)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetParentsPageReference">
            <summary>Sets the shim of DataFactory.GetParents(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetSettingsFromPagePageReference">
            <summary>Sets the shim of DataFactory.GetSettingsFromPage(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetSettingsFromPagePageReferenceBoolean">
            <summary>Sets the shim of DataFactory.GetSettingsFromPage(PageReference pageLink, Boolean fallbackToStartPageId)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.GetWastebasketContentILanguageSelectorInt32Int32">
            <summary>Sets the shim of DataFactory.GetWastebasketContent(ILanguageSelector selector, Int32 startIndex, Int32 maxRows)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.HasSufficientAccessPageProviderBasePageReferenceAccessLevel">
            <summary>Sets the shim of DataFactory.HasSufficientAccess(PageProviderBase pageProvider, PageReference pageLink, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.InitializeEnterpriseSetting">
            <summary>Sets the shim of DataFactory.InitializeEnterpriseSetting()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.IsCapabilitySupportedPageReferencePageProviderCapabilities">
            <summary>Sets the shim of DataFactory.IsCapabilitySupported(PageReference pageLink, PageProviderCapabilities capability)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.IsWastebasketPageReference">
            <summary>Sets the shim of DataFactory.IsWastebasket(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.ListDelayedPublish">
            <summary>Sets the shim of DataFactory.ListDelayedPublish()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.ListPublishedVersionsPageReference">
            <summary>Sets the shim of DataFactory.ListPublishedVersions(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.ListVersionsPageReference">
            <summary>Sets the shim of DataFactory.ListVersions(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.ListVersionsPageReferenceString">
            <summary>Sets the shim of DataFactory.ListVersions(PageReference pageLink, String languageBranch)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.ListingFetchCacheHitsGet">
            <summary>Sets the shim of DataFactory.get_ListingFetchCacheHits()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.ListingFetchCountGet">
            <summary>Sets the shim of DataFactory.get_ListingFetchCount()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.ListingFetchDatabaseReadsGet">
            <summary>Sets the shim of DataFactory.get_ListingFetchDatabaseReads()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.LoadPublishedVersionPageReference">
            <summary>Sets the shim of DataFactory.LoadPublishedVersion(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.LoadPublishedVersionPageReferenceString">
            <summary>Sets the shim of DataFactory.LoadPublishedVersion(PageReference pageLink, String languageBranch)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.LoadVersionPageReference">
            <summary>Sets the shim of DataFactory.LoadVersion(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.MovePageReferencePageReference">
            <summary>Sets the shim of DataFactory.Move(PageReference pageLink, PageReference destinationLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.MovePageReferencePageReferenceAccessLevelAccessLevel">
            <summary>Sets the shim of DataFactory.Move(PageReference pageLink, PageReference destinationLink, AccessLevel requiredSourceAccess, AccessLevel requiredDestinationAccess)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.MoveToWastebasketPageReference">
            <summary>Sets the shim of DataFactory.MoveToWastebasket(PageReference pageLink)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.PageFetchCacheHitsGet">
            <summary>Sets the shim of DataFactory.get_PageFetchCacheHits()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.PageFetchCountGet">
            <summary>Sets the shim of DataFactory.get_PageFetchCount()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.PageFetchDatabaseReadsGet">
            <summary>Sets the shim of DataFactory.get_PageFetchDatabaseReads()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.PingString">
            <summary>Sets the shim of DataFactory.Ping(String remoteSiteName)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.ProviderMapGet">
            <summary>Sets the shim of DataFactory.get_ProviderMap()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.ProviderMapSetPageProviderMap">
            <summary>Sets the shim of DataFactory.set_ProviderMap(PageProviderMap value)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.ResetCounters">
            <summary>Sets the shim of DataFactory.ResetCounters()</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.ResolvePageFolderInt32">
            <summary>Sets the shim of DataFactory.ResolvePageFolder(Int32 pageFolderId)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.SavePageDataSaveAction">
            <summary>Sets the shim of DataFactory.Save(PageData page, SaveAction action)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.SavePageDataSaveActionAccessLevel">
            <summary>Sets the shim of DataFactory.Save(PageData page, SaveAction action, AccessLevel access)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.SupportCompatibilityEPiServerCompatibility">
            <summary>Sets the shim of DataFactory.SupportCompatibility(EPiServerCompatibility operation)</summary>
        </member>
        <member name="P:EPiServer.Fakes.ShimDataFactory.AllInstances.TransferPagePageProviderBasePageProviderBasePageDataPageReferenceBoolean">
            <summary>Sets the shim of DataFactory.TransferPage(PageProviderBase sourceProvider, PageProviderBase destinationProvider, PageData page, PageReference destinationLink, Boolean preservePageGuid)</summary>
        </member>
    </members>
</doc>
